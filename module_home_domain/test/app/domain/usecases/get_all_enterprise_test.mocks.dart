// Mocks generated by Mockito 5.0.9 from annotations
// in module_home_domain/test/app/domain/usecases/get_all_enterprise_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:commons/shared/helpers/errors.dart' as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:module_home_domain/app/domain/entities/enterprises_entity.dart'
    as _i6;
import 'package:module_home_domain/app/domain/repositories/enterprise_repository_interface.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [IEnterpriseRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIEnterpriseRepository extends _i1.Mock
    implements _i3.IEnterpriseRepository {
  MockIEnterpriseRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.EnterpriseEntity>>> get() =>
      (super.noSuchMethod(Invocation.method(#get, []),
          returnValue: Future<
                  _i2.Either<_i5.Failure, List<_i6.EnterpriseEntity>>>.value(
              _FakeEither<_i5.Failure, List<_i6.EnterpriseEntity>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.EnterpriseEntity>>>);
}
